# Copyright 2015, Perceivon Hosting Inc.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this
#    list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY PERCEIVON HOSTING INC. AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL PERCEIVON HOSTING INC. OR CONTRIBUTORS BE LIABLE FOR
# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
---
# XXX: Refactor idea:
# Figure out how with_dict could be used to store/register variables.

# redmine
- name: Check if creating {{ data.redmine.dbname }} database is necessary
  iocage: state=exec tag={{ postgresql_jail.uuid }} user=pgsql cmd="/bin/sh -c \"echo SELECT datname FROM pg_database WHERE datname = \\\'{{ data.redmine.dbname }}\\\' | psql template1 | grep {{ data.redmine.dbname }}\" "
  register: redmine_db_present
  ignore_errors: true

- name: Create {{ data.redmine.dbname }} database
  iocage: state=exec tag={{ postgresql_jail.uuid }} user=pgsql cmd="/bin/sh -c \"echo CREATE DATABASE {{ data.redmine.dbname }} WITH OWNER = {{ data.redmine.dbuser }} | psql template1 \" "
  when:
  - redmine_db_present | failed

# zabbix
- name: Check if creating {{ data.zabbix.dbname }} database is necessary
  iocage: state=exec tag={{ postgresql_jail.uuid }} user=pgsql cmd="/bin/sh -c \"echo SELECT datname FROM pg_database WHERE datname = \\\'{{ data.zabbix.dbname }}\\\' | psql template1 | grep {{ data.zabbix.dbname }}\" "
  register: zabbix_db_present
  ignore_errors: true

- name: Create {{ data.zabbix.dbname }} database
  iocage: state=exec tag={{ postgresql_jail.uuid }} user=pgsql cmd="/bin/sh -c \"echo CREATE DATABASE {{ data.zabbix.dbname }} WITH OWNER = {{ data.zabbix.dbuser }} | psql template1 \" "
  when:
  - zabbix_db_present | failed

# gitlab
- name: Check if creating {{ data.gitlab.dbname }} database is necessary
  iocage: state=exec tag={{ postgresql_jail.uuid }} user=pgsql cmd="/bin/sh -c \"echo SELECT datname FROM pg_database WHERE datname = \\\'{{ data.gitlab.dbname }}\\\' | psql template1 | grep {{ data.gitlab.dbname }}\" "
  register: gitlab_db_present
  ignore_errors: true

- name: Create {{ data.gitlab.dbname }} database
  iocage: state=exec tag={{ postgresql_jail.uuid }} user=pgsql cmd="/bin/sh -c \"echo CREATE DATABASE {{ data.gitlab.dbname }} WITH OWNER = {{ data.gitlab.dbuser }} | psql template1 \" "
  when:
  - gitlab_db_present | failed
